前書き：
このファイルは【Spring　Framework超入門　やさしくわかる　Webアプリ開発】　という本を勉強したメモ書きです。
簡単な内容を省略し、今まで知らなかった部分をメインにしています。

第一章　開発環境を構築
本には、Windows環境に基づいた環境構築を説明してくれたが、
自分はMac環境で試して見たかったので、Mac環境で構築しました。
・環境：Mac M1チップ
・JDK:zulu-19.jdk
・IDE：VSCode
・DB：PostgreSQL

第二章　基礎知識
Javaの基礎知識のため、省略

第三章　Spring　Frameworkのコア機能
・Dependency injection（DI）:依存性の注入
①クラス依存
②インターフェース依存

ここで、簡単なプログラムを作成したため、省略します。
アノテーションを使用して外部ソフトウェアにやってほしいことを伝える
＠Override ------> Javaコンパイラ:オーバーライドメソドオのシグニチャをチェック
@Author --------> JavaDoc ：ヘルプドキュメントを生成
@Component -----> Spring Framework：インスタンスを生成
@NotEmpty ------> Validator：入力欄をチェック
@Test ----------> JUnit：テストドライバ

レイヤ別インスタンス生成アノテーション使用例
クライアント  ーーーー　　アプリケーション層　ーーーー　ドメイン層　ーーーー　インフラストラクチャ層　ーーーー　データベース
                  @Controller        @Service        @Repository

・Aspect Oriented Programming（AOP）:アスペクト指向プログラミング
①中心的関心事
実現すべき機能を表すプログラム
例：DBアクセス処理
②横断的関心事
本質的な機能ではないが品質や保守／運用等の観点で必ず必要な機能を表すプログラム
例：例外処理、ログ、DBのトランザクション処理

AOPの固定用語
・Advice：横断的関心事の実装。ログ、トランザクションなど
①@Before:中心的関心事が実行される前に横断的関心事を実行する
②＠AfterReturning：中心的関心事が正常に終了した後に横断的関心事を実行する
③＠AfterThrowing：中心的関心事が例外がスローされた後に横断的関心事を実行する
④After：中心的関心事の実行結果にかからわず、実行後に横断的関心事を実行する
⑤Around：中心的関心事の呼び出し前後で　横断的関心事を実行する

・Aspect：Adviceをまとめたクラス
・JoinPoint：Adviceを中心的関心事に適用するタイミング
・Pointcut：Adviceを挿入できる場所。
・Interceptor：処理の制御をインターセプトするための仕組みのこと
・Target：Adviceが挿入される対象のこと

第四章　データベースを操作する
こちらのサイトを参考にして、postgresqlのインストールから、テーブルにデータを挿入までできました。
https://amateur-engineer.com/postgresql-mac-install/

第五章　MVCモデル
※ここのMVCはSpring MVCモデルではない！！！
M:Model、業務処理内容を記述する役割
V:View、入力・出力など表示する役割
C:Controller、上記２つをコントロールする役割

MVCモデルを実際作成しました。
プロジェクト名：springmvcmodel、mvcviewsample

第六章　テンプレートエンジン
Spring Bootでは「Thymeleaf」というテンプレートエンジンが推奨される
Thymeleaf:
①　HTMLベースのテンプレートエンジンで、決められた式を記述することで、ページを動的に組み立てくれる
②最終的な出力をイメージしながらビューを作成できる
※Thymeleafってなかなかいいですね。フロントエンド側の開発が楽になりそう。
こちらのサイトでまとめられた内容とほぼ同じため、省略する
https://camp.trainocate.co.jp/magazine/about-thymeleaf/

プログラムを作成しました。
プロジェクト名：thymeleafsample
TODO:プロジェクトに全パターンを追加する

第七章　テンプリクエストパラメータ
特にまとめる知識がなく、プログラムを作成しながら理解していく感じ
プログラムを作成しました。
プロジェクト名：requestparamsample、pathvaliablesample

第八章　バリデーション機能
プログラムを作成しました。
プロジェクト名：validationsample

第九章　アプリを作成する
第一章から第八章まで学んだ内容で「○☓クイズ」アプリを実際に作成してみる



第十章　アプリを作成する（データベース操作）

第十一章　アプリを作成する（サービス処理）

第十二章　アプリを作成する（アプリケーション層）
